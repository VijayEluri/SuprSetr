/*
 * SuprSetr is Copyright 2010-2011 by Jeremy Brooks
 *
 * This file is part of SuprSetr.
 *
 *  SuprSetr is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  SuprSetr is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with SuprSetr.  If not, see <http://www.gnu.org/licenses/>.
*/

package net.jeremybrooks.suprsetr.tutorial;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;

/**
 * This is the Tutorial dialog.
 *
 * <p>It will display multiple pages of content, allowing the user to navigate
 * back and forth. When they finish, it will hide itself, and the user has the
 * option to close the window before they finish the tutorial.</p>
 * 
 * @author jeremyb
 */
public class Tutorial extends javax.swing.JDialog {

    /** Logging. */
    private Logger logger = Logger.getLogger(Tutorial.class);
    
    /** The current page of the tutorial. */
    private int currentPage = 1;

    /** The last page. */
    private int lastPage = 5;

    /** Icon for the Next button. */
    private ImageIcon nextIcon = new ImageIcon(getClass().getResource("/images/next16.png"));

    /** Icon for the Finish button */
    private ImageIcon finishIcon = new ImageIcon(getClass().getResource("/images/s16.png"));

    /** Creates new form Tutorial1 */
    public Tutorial(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

	this.btnBack.setVisible(false);
	this.loadPage();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        btnBack = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jEditorPane1.setContentType("text/html");
        jEditorPane1.setEditable(false);
        jScrollPane1.setViewportView(jEditorPane1);

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back16.png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/next16.png"))); // NOI18N
        btnNext.setText("Next");
        btnNext.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(510, Short.MAX_VALUE)
                .add(btnBack)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(btnNext))
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnNext)
                    .add(btnBack)))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-631)/2, (screenSize.height-341)/2, 631, 341);
    }// </editor-fold>//GEN-END:initComponents


    /**
     * Increment the current page, then load content.
     *
     * If we are on the last page, close the tutorial.
     * @param evt
     */
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
	if (this.btnNext.getText().equals("Next")) {
	    this.currentPage++;
	    if (this.currentPage > this.lastPage) {
		this.currentPage = this.lastPage;
	    }

	    this.loadPage();
	} else {
	    this.dispose();
	    this.setVisible(false);
	}
    }//GEN-LAST:event_btnNextActionPerformed


    /**
     * If the user tries to close the tutorial before they are on the last page,
     * make them confirm.
     * 
     * @param evt
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
	if (this.currentPage < this.lastPage) {
	    int confirm = JOptionPane.showConfirmDialog(this,
		    "You have not finished the tutorial yet.\n" +
		    "Are you sure you want to exit the tutorial?",
		    "Exit Tutorial?",
		    JOptionPane.YES_NO_OPTION,
		    JOptionPane.QUESTION_MESSAGE);

	    if (confirm == JOptionPane.YES_OPTION) {
		this.dispose();
		this.setVisible(false);
	    }
	} else {
	    this.dispose();
	    this.setVisible(false);
	}
    }//GEN-LAST:event_formWindowClosing


    /**
     * Decrement the current page, then load the content.
     *
     * @param evt
     */
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
	this.currentPage--;
	if (this.currentPage < 1) {
	    this.currentPage = 1;
	}

	this.loadPage();
    }//GEN-LAST:event_btnBackActionPerformed



    /**
     * This method will set the button states, then load the next page of the
     * tutorial.
     *
     *
     */
    private void loadPage() {
	// The text and icon for the Next button changes if we are on the last page
	if (this.currentPage == this.lastPage) {
	    this.btnNext.setText("Start using SuprSetr");
	    this.btnNext.setIcon(this.finishIcon);
	} else {
	    this.btnNext.setText("Next");
	    this.btnNext.setIcon(this.nextIcon);
	}

	// Hide the Back button if we are on the first page
	this.btnBack.setVisible(this.currentPage > 1);

	// Set the title of the tutorial window
	this.setTitle("SuprSetr Tutorial Page " + this.currentPage + "/" + this.lastPage);

	// Now load the content for the current page of the tutorial
	BufferedReader in = null;
	String line;
	StringBuilder sb = new StringBuilder();
	String page = "/net/jeremybrooks/suprsetr/tutorial/screen" + this.currentPage + ".html";

	try {
	    logger.debug("Loading page " + page);
	    in = new BufferedReader(new InputStreamReader(this.getClass().getResourceAsStream(page)));

	    while((line = in.readLine()) != null) {
		sb.append(line);
	    }
	} catch (Exception e) {
	    logger.warn("COULD NOT LOAD THE RESOURCE FOR PAGE " + this.currentPage, e);
	}

	this.jEditorPane1.setText(sb.toString());
	
	this.jEditorPane1.setCaretPosition(0);	    // Make sure we are at the top of the displayed content
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnNext;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
